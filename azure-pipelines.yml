# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build Maven Project
    steps:
    - task: Maven@4
      displayName: 'Maven Package'
      inputs:
        mavenPomFile: 'pom.xml'
    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/target/*.?(war|jar)'
        TargetFolder: $(Build.ArtifactStagingDirectory)
    - upload: $(Build.ArtifactStagingDirectory)
      artifact: drop
- stage: Deployment
  displayName: Deploy stage
  jobs:
  - deployment: VMDeploy
    displayName: Web deploy
    environment:
      name: Server
      resourceType: VirtualMachine
    strategy:
      runOnce:
        preDeploy:
          steps:
          - download: current
            artifact: drop
          - script: echo initialize, cleanup, backup, install certs
        deploy:
          steps:
          - task: TomcatDeployment@1
            inputs:
              TomcatUrl: 'http://localhost:8080'
              Username: 'admin'
              Password: 'admin'
              Warfile: '$(Pipeline.Workspace)/drop/target/SistemaBiblioteca-0.0.1-SNAPSHOT.war'
              Context: '/'
              ServerVersion: '7OrAbove'