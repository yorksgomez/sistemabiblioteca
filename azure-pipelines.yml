# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build Maven Project
    steps:
    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'sonar'
        organization: 'yorksgomez'
        scannerMode: 'Other'
        extraProperties: |
          # Additional properties that will be passed to the scanner,
          # Put one key=value per line, example:
          # sonar.exclusions=**/*.bin
          sonar.projectKey=yorksgomez_Sistema-Biblioteca-SCRUM
          sonar.projectName=Sistema Biblioteca SCRUM
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sqMavenPluginVersionChoice: 'latest'
        sonarQubeRunAnalysis: true
    - task: SonarCloudPublish@1
      inputs:
        pollingTimeoutSec: '300'
    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/target/*.?(war|jar)'
        TargetFolder: $(Build.ArtifactStagingDirectory)
    - upload: $(Build.ArtifactStagingDirectory)
      artifact: drop
- stage: Deployment
  displayName: Deploy stage
  jobs:
  - deployment: VMDeploy
    displayName: Web deploy
    environment:
      name: Server
      resourceType: VirtualMachine
    strategy:
      runOnce:
        preDeploy:
          steps:
          - download: current
            artifact: drop
          - script: echo initialize, cleanup, backup, install certs
        deploy:
          steps:
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                # Modify deployment script based on the app type
                echo "Starting deployment script run"
                sudo mv '$(Pipeline.Workspace)/drop/target/ROOT.war' /var/lib/tomcat9/webapps/ROOT.war && sudo systemctl restart tomcat9